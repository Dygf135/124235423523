name: Solve CAPTCHA and Capture Screenshot

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  solve_captcha_and_screenshot:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
      env:
        PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'
        
    - name: Create package.json and install dependencies
      run: |
        echo '{"name": "captcha-solver-action", "version": "1.0.0", "private": true}' > package.json
        npm install puppeteer-extra puppeteer-extra-plugin-stealth axios
        
    - name: Create CAPTCHA solver script
      run: |
        cat << 'EOD' > captcha_solver.js
        const puppeteer = require("puppeteer-extra");
        const StealthPlugin = require("puppeteer-extra-plugin-stealth");
        puppeteer.use(StealthPlugin());

        async function run() {
          const browser = await puppeteer.launch({
            args: ['--no-sandbox', '--disable-setuid-sandbox', '--font-render-hinting=none'],
            executablePath: process.env.PUPPETEER_EXEC_PATH,
            headless: false,
          });

          const page = await browser.newPage();
          await page.goto("https://patrickhlauke.github.io/recaptcha/", {
            waitUntil: "networkidle0",
          });

          // Solver code
          await page.evaluate(() => {
            // The entire content of your evaluate function will be pasted here
          });

          // Wait for the CAPTCHA to be solved
          await page.waitForFunction(
            () => {
              const recaptchaStatus = document
                .querySelector('iframe[src*="api2/anchor"]')
                .contentWindow.document.querySelector("#recaptcha-accessible-status");
              return (
                recaptchaStatus &&
                recaptchaStatus.innerText.includes("You are verified")
              );
            },
            { timeout: 120000 }, // Increased timeout to 2 minutes
          );

          // Take a screenshot after CAPTCHA is solved
          await page.screenshot({ path: "screenshot.png" });
          console.log("Screenshot taken after CAPTCHA is solved.");

          await browser.close();
        }

        run();
        EOD
        
    - name: Run CAPTCHA solver and capture screenshot
      uses: beemi/puppeteer-headful@master
      env:
        CI: 'true'
        DISPLAY: :99
      with:
        args: node captcha_solver.js
        
    - name: Upload screenshot
      uses: actions/upload-artifact@v2
      with:
        name: captcha-solved-screenshot
        path: screenshot.png
